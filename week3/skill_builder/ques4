#include<ctype.h>
int isOperand(char ch) {
    return isalpha(ch);
}

int Prec(char ch) {
    switch (ch){
        case '+':
            return 1;
        case '-':
            return 1;
            
        case '*':
            return 2;
            
        case '/':
            return 2;
        case '^':
            return 3;
    }
    return 0;   
}

void infixToPostfix(char* exp) {
    struct Stack *stack=createStack(100);
    for(int i=0; exp[i]!='\0' ;i++){
        char ch=exp[i];
        
        if (isOperand(ch)){
            printf("%c",ch);
        }
        
        else if(ch=='('){
            push(stack,ch);
        }
        else if(ch==')'){
            while(!isEmpty(stack) &&  peek(stack)!='('){
                printf("%c",pop(stack));
            }
            
            pop(stack);
        }
        else{
            while(!isEmpty(stack)&& Prec(peek(stack))>=Prec(ch)){
                char val2 =pop(stack);
                printf("%c",val2);
            }
            push(stack,ch);
        }
           
    }//for
        while(!isEmpty(stack)){
            printf("%c",pop(stack));
        }
}//main
